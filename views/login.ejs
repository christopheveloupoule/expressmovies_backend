<!DOCTYPE html>
	<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<title>Express Movies</title>
		<link rel="stylesheet" href="../public/style.css" />
        <script src="https://unpkg.com/axios@0.15.3/dist/axios.min.js"></script>
	</head>
	<body>
		<%- include ('./partials/header') %>

		<div class="central">
			<h1><%= title %></h1>
			<br>
			<div id="login">
				<form>
					<legend>Veuillez saisir vos identifiants</legend>
					<label for="email">email</label>
					<input type="text" name="email" id="email">
					<label for="password">mot de passe</label>
					<input type="password" name="password" id="password">
					<button type="submit">connexion</button>
				</form>
			</div>
			<br>
			<div id="profile" style="display:none">
                <button id="disconnectBtn">déconnexion</button>
				<button id="display-payload">voir le payload</button>
				<div id="decoded-payload"></div>
				<div>
                    <a href="#" id="member-only">espace membre</a>
                    <div id="member-data"></div>
                </div>
            </div>
		</div>

		<footer>
			<%- include ('./partials/footer') %>
		</footer>
		<script>
			var form = document.querySelector('form');
			form.addEventListener("submit", loginUser);	

			var loginArea = document.querySelector('#login');
            var profileArea = document.querySelector('#profile');

			var displayPayloadBtn = document.querySelector('#display-payload');
            displayPayloadBtn.addEventListener('click', displayPayload);

			var disconnectBtn = document.querySelector('#disconnectBtn');
			disconnectBtn.addEventListener('click', disconnect);

			var memberOnlyLink = document.querySelector('#member-only');
            memberOnlyLink.addEventListener('click', makeRequestWithToken);

			var connectionLinkArea = document.querySelector('#connectionLink');
			handleFormDisplay();
          
			function loginUser(event) {				
                loginUserWithXHR(event);
			}	
			
			function loginUserWithXHR(event) {		
				event.preventDefault();
                console.log('loginUserWithXHR');		
				// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
				var xhr = new XMLHttpRequest();
				xhr.open("POST", '/login', true);
				//Send the proper header information along with the request
				xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				xhr.onreadystatechange = function() {//Call a function when the state changes.
					if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
						var token = xhr.response;
                        localStorage.setItem('token', token);
						switchToLoggedinMode();
                        form.reset();
					}
				}				
				var email = document.getElementById('email').value;
				var password = document.getElementById('password').value;
				var payLoad = "email=" + email + "&" + "password=" + password; 
				xhr.send(payLoad); 				
			}


			function handleFormDisplay() {
                if(localStorage.getItem('token')) {
                    switchToLoggedinMode();
                } else {
                    switchToLoggedOutMode();
                }
            }

			function switchToLoggedinMode() {
                loginArea.style.display = 'none';
                profileArea.style.display = 'block';
				connectionLinkArea.innerHTML = '<a href="/login">déconnexion</a>';
            }
            function switchToLoggedOutMode() {
                loginArea.style.display = 'block';
                profileArea.style.display = 'none';
				connectionLinkArea.innerHTML = '<a href="/login">connexion</a>'; 
            }

			function displayPayload() {
                var payload = parseJwt();
                var decodedPayloadDiv = document.querySelector('#decoded-payload');
                decodedPayloadDiv.innerHTML = '<pre>' + JSON.stringify(payload) + '</pre>';
            }


			function parseJwt () { 
                var tokenFromStorage = localStorage.getItem('token');            
                console.log('parseJwt tokenFromStorage', tokenFromStorage);
                if(tokenFromStorage) { //si token recuperer
                    var base64Payload = tokenFromStorage.split('.')[1];                
                    return JSON.parse(window.atob(base64Payload));
                } else { //si le token est non recuperer
                    return 'no token to parse';
                }          
            };

			function disconnect() {
                switchToLoggedOutMode();
                localStorage.removeItem('token');
            }

			function makeRequestWithToken(evt) {
                evt.preventDefault();
               // console.log('makeRequestWithToken');
                var page = this.id;
                var tokenFromStorage = localStorage.getItem('token');   
                var config = {};
				
                if(tokenFromStorage) {
                    config.headers =  {'Authorization': "Bearer " + JSON.parse(tokenFromStorage)}
                }
                
                axios.get( 
                    'http://localhost:3000/' + page,
                    config
                ).then((res) => {
                    console.log('success');
                    console.log(res);  
                })
                .catch(err => {
                    console.error('makeRequestWithToken err', err);
                });
			}

		</script>
	</body>
</html> 